name: Production website - Deploy  # Use Retype for GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build:
    # Run build on Ubuntu.
    runs-on: ubuntu-latest
    steps:
      # Setup Node.js for npm, required for Retype installation.
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install Retype CLI globally using npm for building the site.
      - name: Install Retype CLI
        run: |
          npm install retypeapp --global
          retype --version

      # Fetch repository code.
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }} # Check out the specific branch or tag that triggered the workflow
          submodules: recursive # Check out any Git submodules
          fetch-depth: 0 # Fetch the entire Git history

      # Configure GitHub Pages deployment.
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # Determine the GitHub Pages URL and modify retype.yml dynamically.
      - name: Determine URL and Modify retype.yml
        run: |
          if [[ "${{ github.event.repository.owner.login }}" == "${{ github.repository_owner }}" ]]; then
            # Construct the GitHub Pages URL based on the repository owner and name.
            URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
            # Use sed to replace the url line in retype.yml with the dynamic URL.
            sed -i "s|url:.*|url: $URL|g" retype.yml
          fi

      # Generate the static site from the repository content using Retype. Use License if applies
      # Print the final URL used in the retype.yml file.
      - name: Build with Retype
        run: |
          URL_RETYPE=$(grep '^url:' retype.yml | awk '{print $2}')
          if [[ "$URL_RETYPE" == "https://handbook.buildwithmatter.com/" ]]; then
            retype build --secret ${{ secrets.RETYPE_LICENSE }}
          else
            retype build
          fi
          echo "retype.yml - url: $URL" # Print the extracted URL to the workflow log.

      # Upload the generated static site as a GitHub Pages artifact.
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Set the deployment URL from the deploy-pages step.
    runs-on: ubuntu-latest
    needs: build # Ensure the build job completes before deploying.
    steps:
      # Deploy the artifact to GitHub Pages.
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
